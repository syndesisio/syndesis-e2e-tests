# Java Maven CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-java/ for more details
#
version: 2

common_env: &common_env
  MAVEN_OPTS: -Xmx1024m

job_default: &job_defaults
  docker:
    - image: circleci/openjdk:8-jdk-node-browsers

load_m2: &load_m2
  attach_workspace:
    at: ~/.m2

save_m2: &save_m2
  persist_to_workspace:
    root: ~/.m2
    paths:
      - repository/io/syndesis

jobs:
  e2e-tests:
    <<: *job_defaults
    environment:
      <<: *common_env

    steps:
      - checkout
      - restore_cache:
          key: syndesis-e2e-qe-mvn-{{ checksum "pom.xml" }}
      - <<: *load_m2
      - run:
          name: Build Extensions
          command: |
            git submodule update --init --recursive
            ./mvnw clean install -f syndesis-extensions/pom.xml
      - run:
          name: Execute tests
          command: |
            if [ -n "${OPENSHIFT_TOKEN}" ]; then
                curl -fsSL https://github.com/openshift/origin/releases/download/v3.6.0/openshift-origin-client-tools-v3.6.0-c4dd4cf-linux-64bit.tar.gz | sudo tar xz -C /usr/bin --strip-components 1
                oc login --server "${OPENSHIFT_SERVER}" --token "${OPENSHIFT_TOKEN}"

                oc get cm syndesis-qe -o jsonpath="{ .data.ui_test_properties }" -n syndesis-ci > test.properties
                oc get cm syndesis-qe -o jsonpath="{ .data.credentials }" -n syndesis-ci > credentials.json
            else
              echo "Setup OpenShift cluster credentials"
            fi

            nohup /usr/bin/Xvfb :99 -ac -screen 0 1280x720x24 &
            export DISPLAY=:99
            ./mvnw clean test -B -P ui -Dcucumber.options="--tags ~@wip"

      - run:
          name: Store Cucumber report
          when: always
          command: |
            mkdir -p ~/cucumber
            cp -f ui-tests/target/cucumber/cucumber-junit.xml ~/cucumber/ui.cucumber
      - store_artifacts:
          path: ui-tests/target/cucumber
      - <<: *save_m2
      - save_cache:
          key: syndesis-e2e-qe-mvn-{{ checksum "pom.xml" }}
          paths:
            - ~/.m2

  rest-tests:
    <<: *job_defaults
    environment:
      <<: *common_env

    steps:
      - checkout
      - restore_cache:
          key: syndesis-rest-qe-mvn-{{ checksum "pom.xml" }}
      - <<: *load_m2
      - run:
          name: Execute tests
          command: |
            if [ -n "${OPENSHIFT_TOKEN}" ]; then
                curl -fsSL https://github.com/openshift/origin/releases/download/v3.6.0/openshift-origin-client-tools-v3.6.0-c4dd4cf-linux-64bit.tar.gz | sudo tar xz -C /usr/bin --strip-components 1
                oc login --server "${OPENSHIFT_SERVER}" --token "${OPENSHIFT_TOKEN}"

                oc get cm syndesis-qe -o jsonpath="{ .data.rest_test_properties }" -n syndesis-ci > test.properties
                oc get cm syndesis-qe -o jsonpath="{ .data.credentials }" -n syndesis-ci > credentials.json
            else
              echo "Setup OpenShift cluster credentials"
            fi

            ./mvnw clean test -B -P rest -Dcucumber.options="--tags ~@wip"

      - run:
          name: Store Cucumber report
          when: always
          command: |
            mkdir -p ~/cucumber
            cp -f rest-tests/target/cucumber/cucumber-junit.xml ~/cucumber/rest.cucumber
      - store_artifacts:
          path: rest-tests/target/cucumber
      - <<: *save_m2
      - save_cache:
          key: syndesis-rest-qe-mvn-{{ checksum "pom.xml" }}
          paths:
            - ~/.m2

  build:
    <<: *job_defaults
    environment:
      <<: *common_env

    steps:
      - checkout
      - restore_cache:
          key: syndesis-qe-mvn-{{ checksum "pom.xml" }}
      - <<: *load_m2
      - run:
          name: Checkout Syndesis
          command: |
            git clone git@github.com:syndesisio/syndesis.git
      - run:
          name: Build Rest
          command: |
            ./syndesis/tools/bin/syndesis build --init --batch-mode --backend --flash | tee syndesis_build_log.txt
      - run:
          name: Build tests
          command: |
            ./mvnw clean install -B -DskipTests | tee build_log.txt
      - run:
          name: Archive checkstyle result
          command: |
            mkdir ./checkstyle/
            find . -type f -regex "\./.+/target/checkstyle-result.xml" -exec bash -c "cp {} ./checkstyle/\`echo {} | sed -e 's#^\./##' | sed -e 's#/#-#g'\`" \;
      - store_artifacts:
          path: ./checkstyle
      - <<: *save_m2
      - save_cache:
          key: syndesis-qe-mvn-{{ checksum "pom.xml" }}
          paths:
            - ~/.m2

workflows:
  version: 2
  syndesis-qe:
    jobs:
      - e2e-tests:
          requires:
            - build
          filters:
            branches:
              only: master
      - rest-tests:
          requires:
            - build
          filters:
            branches:
              only: master
      - build
